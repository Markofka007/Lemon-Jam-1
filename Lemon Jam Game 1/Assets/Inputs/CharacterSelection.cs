//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.1
//     from Assets/Inputs/CharacterSelection.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CharacterSelection : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CharacterSelection()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CharacterSelection"",
    ""maps"": [
        {
            ""name"": ""Selection"",
            ""id"": ""8fbbb80c-2ae1-4fa3-94ab-7aa748bdadf4"",
            ""actions"": [
                {
                    ""name"": ""Left 1"",
                    ""type"": ""Button"",
                    ""id"": ""d7a3ec53-37b3-495e-8091-7d9011b44625"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left 2"",
                    ""type"": ""Button"",
                    ""id"": ""e2fd5b8f-906a-4f2d-95ec-b6d726e44595"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left 3"",
                    ""type"": ""Button"",
                    ""id"": ""f1f818c1-6e0f-44a5-95d0-51c3fb646d30"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left 4"",
                    ""type"": ""Button"",
                    ""id"": ""6acb8c91-0770-4f25-be72-1034db61045e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right 1"",
                    ""type"": ""Button"",
                    ""id"": ""95cb4d18-1d18-4389-81d2-e63dc2895bdc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right 2"",
                    ""type"": ""Button"",
                    ""id"": ""f588326b-e26a-4bab-9a17-3924dd1ab41f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right 3"",
                    ""type"": ""Button"",
                    ""id"": ""0ae0bf42-2d25-4863-adef-f880509b059c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right 4"",
                    ""type"": ""Button"",
                    ""id"": ""82d80549-a82b-4b78-933d-47422bc82f23"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select 1"",
                    ""type"": ""Button"",
                    ""id"": ""6c8ee3b3-cd3d-4bd8-bbf5-7ff611bbfd5d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select 2"",
                    ""type"": ""Button"",
                    ""id"": ""d922284a-ca58-4fef-847b-9dbd8480488a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select 3"",
                    ""type"": ""Button"",
                    ""id"": ""5c2cd29f-ac69-44c9-8391-2b5565fdaddc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select 4"",
                    ""type"": ""Button"",
                    ""id"": ""b2d01be0-da43-4f25-93c2-2e52cabdeb38"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""62027999-626f-417e-9113-32852080fc18"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Left 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55860870-31e0-4858-a8b9-008ee3f278fd"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Right 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""328e4259-1a58-461e-aac4-87cde5283f76"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Select 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1fe338f-fb0c-4d75-86c3-9773d1c10a9c"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller2"",
                    ""action"": ""Left 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59e6b2a9-12fc-48e3-8b3a-70560321e711"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller2"",
                    ""action"": ""Right 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d26df1d9-010b-480a-9cc2-3eee6e4fe164"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller2"",
                    ""action"": ""Select 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ab4e9bf-c905-4334-9e38-e68eda2942ca"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller3"",
                    ""action"": ""Left 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2975392-9427-47c5-b1af-cabbabe4446f"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller3"",
                    ""action"": ""Right 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e81ee38-5c33-42de-9f34-786a4b8731a2"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller3"",
                    ""action"": ""Select 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""135777ae-73d8-4dfd-990f-d6b1a26ff9c3"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller4"",
                    ""action"": ""Left 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""036c1849-0414-4e62-a875-27bf73dcfd88"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller4"",
                    ""action"": ""Right 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0102cbd-79e7-48cb-8017-d62ded5f2189"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller4"",
                    ""action"": ""Select 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller2"",
            ""bindingGroup"": ""Controller2"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller3"",
            ""bindingGroup"": ""Controller3"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller4"",
            ""bindingGroup"": ""Controller4"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Selection
        m_Selection = asset.FindActionMap("Selection", throwIfNotFound: true);
        m_Selection_Left1 = m_Selection.FindAction("Left 1", throwIfNotFound: true);
        m_Selection_Left2 = m_Selection.FindAction("Left 2", throwIfNotFound: true);
        m_Selection_Left3 = m_Selection.FindAction("Left 3", throwIfNotFound: true);
        m_Selection_Left4 = m_Selection.FindAction("Left 4", throwIfNotFound: true);
        m_Selection_Right1 = m_Selection.FindAction("Right 1", throwIfNotFound: true);
        m_Selection_Right2 = m_Selection.FindAction("Right 2", throwIfNotFound: true);
        m_Selection_Right3 = m_Selection.FindAction("Right 3", throwIfNotFound: true);
        m_Selection_Right4 = m_Selection.FindAction("Right 4", throwIfNotFound: true);
        m_Selection_Select1 = m_Selection.FindAction("Select 1", throwIfNotFound: true);
        m_Selection_Select2 = m_Selection.FindAction("Select 2", throwIfNotFound: true);
        m_Selection_Select3 = m_Selection.FindAction("Select 3", throwIfNotFound: true);
        m_Selection_Select4 = m_Selection.FindAction("Select 4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Selection
    private readonly InputActionMap m_Selection;
    private ISelectionActions m_SelectionActionsCallbackInterface;
    private readonly InputAction m_Selection_Left1;
    private readonly InputAction m_Selection_Left2;
    private readonly InputAction m_Selection_Left3;
    private readonly InputAction m_Selection_Left4;
    private readonly InputAction m_Selection_Right1;
    private readonly InputAction m_Selection_Right2;
    private readonly InputAction m_Selection_Right3;
    private readonly InputAction m_Selection_Right4;
    private readonly InputAction m_Selection_Select1;
    private readonly InputAction m_Selection_Select2;
    private readonly InputAction m_Selection_Select3;
    private readonly InputAction m_Selection_Select4;
    public struct SelectionActions
    {
        private @CharacterSelection m_Wrapper;
        public SelectionActions(@CharacterSelection wrapper) { m_Wrapper = wrapper; }
        public InputAction @Left1 => m_Wrapper.m_Selection_Left1;
        public InputAction @Left2 => m_Wrapper.m_Selection_Left2;
        public InputAction @Left3 => m_Wrapper.m_Selection_Left3;
        public InputAction @Left4 => m_Wrapper.m_Selection_Left4;
        public InputAction @Right1 => m_Wrapper.m_Selection_Right1;
        public InputAction @Right2 => m_Wrapper.m_Selection_Right2;
        public InputAction @Right3 => m_Wrapper.m_Selection_Right3;
        public InputAction @Right4 => m_Wrapper.m_Selection_Right4;
        public InputAction @Select1 => m_Wrapper.m_Selection_Select1;
        public InputAction @Select2 => m_Wrapper.m_Selection_Select2;
        public InputAction @Select3 => m_Wrapper.m_Selection_Select3;
        public InputAction @Select4 => m_Wrapper.m_Selection_Select4;
        public InputActionMap Get() { return m_Wrapper.m_Selection; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SelectionActions set) { return set.Get(); }
        public void SetCallbacks(ISelectionActions instance)
        {
            if (m_Wrapper.m_SelectionActionsCallbackInterface != null)
            {
                @Left1.started -= m_Wrapper.m_SelectionActionsCallbackInterface.OnLeft1;
                @Left1.performed -= m_Wrapper.m_SelectionActionsCallbackInterface.OnLeft1;
                @Left1.canceled -= m_Wrapper.m_SelectionActionsCallbackInterface.OnLeft1;
                @Left2.started -= m_Wrapper.m_SelectionActionsCallbackInterface.OnLeft2;
                @Left2.performed -= m_Wrapper.m_SelectionActionsCallbackInterface.OnLeft2;
                @Left2.canceled -= m_Wrapper.m_SelectionActionsCallbackInterface.OnLeft2;
                @Left3.started -= m_Wrapper.m_SelectionActionsCallbackInterface.OnLeft3;
                @Left3.performed -= m_Wrapper.m_SelectionActionsCallbackInterface.OnLeft3;
                @Left3.canceled -= m_Wrapper.m_SelectionActionsCallbackInterface.OnLeft3;
                @Left4.started -= m_Wrapper.m_SelectionActionsCallbackInterface.OnLeft4;
                @Left4.performed -= m_Wrapper.m_SelectionActionsCallbackInterface.OnLeft4;
                @Left4.canceled -= m_Wrapper.m_SelectionActionsCallbackInterface.OnLeft4;
                @Right1.started -= m_Wrapper.m_SelectionActionsCallbackInterface.OnRight1;
                @Right1.performed -= m_Wrapper.m_SelectionActionsCallbackInterface.OnRight1;
                @Right1.canceled -= m_Wrapper.m_SelectionActionsCallbackInterface.OnRight1;
                @Right2.started -= m_Wrapper.m_SelectionActionsCallbackInterface.OnRight2;
                @Right2.performed -= m_Wrapper.m_SelectionActionsCallbackInterface.OnRight2;
                @Right2.canceled -= m_Wrapper.m_SelectionActionsCallbackInterface.OnRight2;
                @Right3.started -= m_Wrapper.m_SelectionActionsCallbackInterface.OnRight3;
                @Right3.performed -= m_Wrapper.m_SelectionActionsCallbackInterface.OnRight3;
                @Right3.canceled -= m_Wrapper.m_SelectionActionsCallbackInterface.OnRight3;
                @Right4.started -= m_Wrapper.m_SelectionActionsCallbackInterface.OnRight4;
                @Right4.performed -= m_Wrapper.m_SelectionActionsCallbackInterface.OnRight4;
                @Right4.canceled -= m_Wrapper.m_SelectionActionsCallbackInterface.OnRight4;
                @Select1.started -= m_Wrapper.m_SelectionActionsCallbackInterface.OnSelect1;
                @Select1.performed -= m_Wrapper.m_SelectionActionsCallbackInterface.OnSelect1;
                @Select1.canceled -= m_Wrapper.m_SelectionActionsCallbackInterface.OnSelect1;
                @Select2.started -= m_Wrapper.m_SelectionActionsCallbackInterface.OnSelect2;
                @Select2.performed -= m_Wrapper.m_SelectionActionsCallbackInterface.OnSelect2;
                @Select2.canceled -= m_Wrapper.m_SelectionActionsCallbackInterface.OnSelect2;
                @Select3.started -= m_Wrapper.m_SelectionActionsCallbackInterface.OnSelect3;
                @Select3.performed -= m_Wrapper.m_SelectionActionsCallbackInterface.OnSelect3;
                @Select3.canceled -= m_Wrapper.m_SelectionActionsCallbackInterface.OnSelect3;
                @Select4.started -= m_Wrapper.m_SelectionActionsCallbackInterface.OnSelect4;
                @Select4.performed -= m_Wrapper.m_SelectionActionsCallbackInterface.OnSelect4;
                @Select4.canceled -= m_Wrapper.m_SelectionActionsCallbackInterface.OnSelect4;
            }
            m_Wrapper.m_SelectionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Left1.started += instance.OnLeft1;
                @Left1.performed += instance.OnLeft1;
                @Left1.canceled += instance.OnLeft1;
                @Left2.started += instance.OnLeft2;
                @Left2.performed += instance.OnLeft2;
                @Left2.canceled += instance.OnLeft2;
                @Left3.started += instance.OnLeft3;
                @Left3.performed += instance.OnLeft3;
                @Left3.canceled += instance.OnLeft3;
                @Left4.started += instance.OnLeft4;
                @Left4.performed += instance.OnLeft4;
                @Left4.canceled += instance.OnLeft4;
                @Right1.started += instance.OnRight1;
                @Right1.performed += instance.OnRight1;
                @Right1.canceled += instance.OnRight1;
                @Right2.started += instance.OnRight2;
                @Right2.performed += instance.OnRight2;
                @Right2.canceled += instance.OnRight2;
                @Right3.started += instance.OnRight3;
                @Right3.performed += instance.OnRight3;
                @Right3.canceled += instance.OnRight3;
                @Right4.started += instance.OnRight4;
                @Right4.performed += instance.OnRight4;
                @Right4.canceled += instance.OnRight4;
                @Select1.started += instance.OnSelect1;
                @Select1.performed += instance.OnSelect1;
                @Select1.canceled += instance.OnSelect1;
                @Select2.started += instance.OnSelect2;
                @Select2.performed += instance.OnSelect2;
                @Select2.canceled += instance.OnSelect2;
                @Select3.started += instance.OnSelect3;
                @Select3.performed += instance.OnSelect3;
                @Select3.canceled += instance.OnSelect3;
                @Select4.started += instance.OnSelect4;
                @Select4.performed += instance.OnSelect4;
                @Select4.canceled += instance.OnSelect4;
            }
        }
    }
    public SelectionActions @Selection => new SelectionActions(this);
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    private int m_Controller2SchemeIndex = -1;
    public InputControlScheme Controller2Scheme
    {
        get
        {
            if (m_Controller2SchemeIndex == -1) m_Controller2SchemeIndex = asset.FindControlSchemeIndex("Controller2");
            return asset.controlSchemes[m_Controller2SchemeIndex];
        }
    }
    private int m_Controller3SchemeIndex = -1;
    public InputControlScheme Controller3Scheme
    {
        get
        {
            if (m_Controller3SchemeIndex == -1) m_Controller3SchemeIndex = asset.FindControlSchemeIndex("Controller3");
            return asset.controlSchemes[m_Controller3SchemeIndex];
        }
    }
    private int m_Controller4SchemeIndex = -1;
    public InputControlScheme Controller4Scheme
    {
        get
        {
            if (m_Controller4SchemeIndex == -1) m_Controller4SchemeIndex = asset.FindControlSchemeIndex("Controller4");
            return asset.controlSchemes[m_Controller4SchemeIndex];
        }
    }
    public interface ISelectionActions
    {
        void OnLeft1(InputAction.CallbackContext context);
        void OnLeft2(InputAction.CallbackContext context);
        void OnLeft3(InputAction.CallbackContext context);
        void OnLeft4(InputAction.CallbackContext context);
        void OnRight1(InputAction.CallbackContext context);
        void OnRight2(InputAction.CallbackContext context);
        void OnRight3(InputAction.CallbackContext context);
        void OnRight4(InputAction.CallbackContext context);
        void OnSelect1(InputAction.CallbackContext context);
        void OnSelect2(InputAction.CallbackContext context);
        void OnSelect3(InputAction.CallbackContext context);
        void OnSelect4(InputAction.CallbackContext context);
    }
}
